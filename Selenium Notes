1)To start Browser uses the following-
new WebDriverManager.DriverManager().SetUpDriver(new ChromeConfig());
IWebDriver driver = new ChromeDriver();
2)Locators-
  //Css selectors traverse= .text-info span:nth-child(1) input
  //xpath selectors traverse=//label[@class='text-info']/span/input
  //#id =#terms
 ID -driver.FindElement(By.Id("username"))
Name -driver.FindElement(By.Name("password"))
Link -driver.FindElement(By.LinkText("terms and conditions"))
CSS-driver.FindElement(By.CssSelector("input[value='Sign In']"))
Xpath-driver.FindElement(By.XPath("//input[@name='signin']"))
driver.FindElement(By.XPath("//div[@class='form-group'][5]/label/span/input"))
Xpath Contains-//th[contains(@aria-label,'fruit name')]
3)Implicit Wait- Should be declared globally in the Setup file
          driver.Manage().Timeouts().ImplicitWait=TimeSpan.FromSeconds(5);
4)Explicit wait- will be declared when time is taken a little longer than global wait
WebDriverWait wait = new WebDriverWait(driver, TimeSpan.FromSeconds(8));
wait.Until(SeleniumExtras.WaitHelpers.ExpectedConditions.ElementIsVisible(By.Id("signInBtn")));
5)Dropdown selection-
  IWebElement dropdown =driver.FindElement(By.XPath("//div [@class='form-group'][4]/select"));
  SelectElement s= new SelectElement(dropdown);
  s.SelectByText("Teacher");
   s.SelectByValue("consult");
   s.SelectByIndex(0);

6) Setup file contains browser loading, basic functionality
7)Testup file contains functionality
8)Teardown file contains browser closing or clearing steps
9) For printing output in Nunit framework -TestContext.Progress.WriteLine(errormessage);


using AngleSharp.Dom;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support.UI;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using WebDriverManager.DriverConfigs.Impl;

namespace SeleniumLearning
{
    public class Sorting
    {
        IWebDriver driver;
        [SetUp]
        public void StartBrowser()
        {
            new WebDriverManager.DriverManager().SetUpDriver(new ChromeConfig());
            driver = new ChromeDriver();
            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(8);
            driver.Manage().Window.Maximize();
            driver.Url = "https://rahulshettyacademy.com/seleniumPractise/#/offers";


        }

        [Test]
        public void SortTable()
        {
            ArrayList a = new ArrayList();
            SelectElement dropdown = new SelectElement(driver.FindElement(By.Id("page-menu")));
            dropdown.SelectByValue("20");
            //Step 1-Get all veggies name into array list A
            IList<IWebElement> veggies = driver.FindElements(By.XPath("//tr//td[1]"));
            foreach (IWebElement vegetables in veggies)
            {
                a.Add(vegetables.Text);

            }
            //Step 2-sort 
            foreach (string element in a)
            {
                TestContext.Progress.WriteLine(element);


            }
            a.Sort();
            TestContext.Progress.WriteLine("After sorting");
            foreach (string element in a)
            {
                TestContext.Progress.WriteLine(element);


            }
            driver.FindElement(By.XPath("//tr//th[@role='columnheader']")).Click();
            ArrayList b= new ArrayList();
            IList<IWebElement> SortedVeggies = driver.FindElements(By.XPath("//tr/td[1]"));

            foreach (IWebElement vegetables in SortedVeggies)
            {
                b.Add(vegetables.Text);

            }
           Assert.AreEqual(a, b);
        }

        [TearDown]
        public void CloseBrowser()
        {
            //driver.Close();
            //driver.Quit();
            driver.Dispose();
        }
    }
}


